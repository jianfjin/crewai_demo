#!/usr/bin/env python
"""
CrewAI CLI Entry Point for Marketing Research Swarm
This file is the standard entry point for 'crewai run' command.
"""

import os
from datetime import datetime

def main():
    """Main entry point for crewai run command."""
    
    # Define the data path for beverage sales
    data_path = "data/beverage_sales.csv"
    
    # Comprehensive inputs for the marketing research analysis
    inputs = {
        "target_audience": "health-conscious millennials interested in premium beverages",
        "campaign_type": "multi-channel digital marketing",
        "budget": 100000,
        "duration": "6 months",
        "data_file_path": data_path,
        "analysis_focus": "beverage market performance and optimization",
        "business_objective": "Launch new organic beverage line and optimize existing product performance",
        "key_metrics": ["sales_trends", "regional_performance", "product_performance", "roi_analysis"],
        "competitive_landscape": "premium beverage market with focus on organic and health-conscious products",
        "market_segments": ["North", "South"],
        "product_lines": ["Green Tea", "Latte"],
        "campaign_goals": [
            "Increase market share in underperforming regions",
            "Optimize product mix based on sales data",
            "Develop targeted marketing strategies for each region",
            "Forecast sales for budget planning",
            "Create compelling content for health-conscious consumers"
        ]
    }
    
    # Configuration paths
    agents_config_path = 'src/marketing_research_swarm/config/agents.yaml'
    tasks_config_path = 'src/marketing_research_swarm/config/tasks.yaml'
    
    print("Starting Marketing Research Crew Analysis via CrewAI CLI...")
    print(f"Analyzing data from: {data_path}")
    print(f"Target Audience: {inputs['target_audience']}")
    print(f"Campaign Budget: ${inputs['budget']:,}")
    print(f"Campaign Duration: {inputs['duration']}")
    print("-" * 60)
    
    try:
        # Import here to avoid module path issues
        from marketing_research_swarm.crew import MarketingResearchCrew
        
        # Initialize and run the crew
        crew = MarketingResearchCrew(agents_config_path, tasks_config_path)
        result = crew.kickoff(inputs)
        
        # Generate timestamp for the report
        timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        
        # Save the analysis report
        report_filename = f"marketing_analysis_report_{timestamp}.md"
        report_path = os.path.join("reports", report_filename)
        
        # Create reports directory if it doesn't exist
        os.makedirs("reports", exist_ok=True)
        
        # Format and save the report
        formatted_report = f"""# Marketing Research Analysis Report
Generated on: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
Generated via: CrewAI CLI (crewai run)

## Executive Summary
This comprehensive marketing research analysis was conducted using AI-powered agents to analyze beverage sales data and provide strategic recommendations for campaign optimization.

## Analysis Parameters
- **Target Audience**: {inputs['target_audience']}
- **Campaign Type**: {inputs['campaign_type']}
- **Budget**: ${inputs['budget']:,}
- **Duration**: {inputs['duration']}
- **Data Source**: {inputs['data_file_path']}

## Detailed Analysis Results

{result}

---
*Report generated by Marketing Research Swarm - AI-Powered Marketing Analytics*
*Execution Method: CrewAI CLI (crewai run)*
"""
        
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(formatted_report)
        
        print("\n" + "="*60)
        print("MARKETING RESEARCH ANALYSIS COMPLETED!")
        print("="*60)
        print(f"Report saved to: {report_path}")
        print("\nANALYSIS RESULTS:")
        print("-" * 40)
        print(result)
        
        return result
        
    except Exception as e:
        print(f"Error running marketing research analysis: {str(e)}")
        print("Please check your configuration files and data path.")
        import traceback
        traceback.print_exc()
        raise

if __name__ == "__main__":
    main()